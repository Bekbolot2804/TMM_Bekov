ОТЧЕТ
по лабораторной работе №1
по дисциплине "Программирование мобильных устройств"

Тема: Определение и отображение углов Эйлера 3D вектора положения головы человека и частоты его изменения по данным видеопотока с видеокамеры в реальном масштабе времени

Выполнил: [Ваше ФИО]
Группа: [Ваша группа]
Проверил: [ФИО преподавателя]

Москва 2024

1. Цель работы
Разработка Android-приложения для определения и отображения углов Эйлера 3D вектора положения головы человека и частоты его изменения в реальном времени с использованием видеокамеры мобильного устройства [1].

2. Задачи работы
- Изучить возможности ML Kit для распознавания лиц и определения углов поворота головы [2]
- Реализовать получение видеопотока с камеры в реальном времени [3]
- Реализовать определение углов Эйлера головы
- Реализовать расчет частоты изменения углов
- Создать пользовательский интерфейс для отображения результатов

3. Используемые технологии
- Android Studio [1]
- Kotlin [4]
- CameraX API для работы с камерой [3]
- ML Kit Face Detection для распознавания лиц и определения углов поворота [2]
- ConstraintLayout для создания пользовательского интерфейса [1]

4. Описание реализации
4.1. Структура проекта
Проект реализован как Android-приложение с одним основным экраном (MainActivity). Используется архитектура с одним активным компонентом, который отвечает за:
- Инициализацию и управление камерой
- Обработку видеопотока
- Распознавание лиц и определение углов
- Отображение результатов

4.2. Основные компоненты
- CameraX для работы с камерой [3]
- ML Kit Face Detection для распознавания лиц [2]
- TextView для отображения углов и частоты их изменения

4.3. Алгоритм работы
1. Инициализация камеры и запрос необходимых разрешений [3]
2. Получение видеопотока с камеры
3. Обработка каждого кадра:
   - Распознавание лиц с помощью ML Kit [2]
   - Получение углов Эйлера (X, Y, Z)
   - Расчет частоты изменения углов
4. Отображение результатов на экране

5. Результаты работы
5.1. Функциональные возможности
- Определение углов Эйлера головы в реальном времени:
  * X: наклон головы вверх-вниз
  * Y: поворот головы влево-вправо
  * Z: наклон головы влево-вправо
- Расчет и отображение частоты изменения углов
- Поддержка переключения между фронтальной и задней камерами
- Отображение сообщения при отсутствии лица в кадре

5.2. Пользовательский интерфейс
- Основной экран с предпросмотром камеры
- Текстовое поле в верхнем левом углу для отображения:
  * Текущих углов Эйлера
  * Частоты изменения углов
- Полупрозрачный фон для лучшей читаемости

6. Аналоги и их анализ
6.1. Head Pose Estimation [5]
- GitHub: https://github.com/opencv/opencv_contrib/tree/master/modules/face
- Использует OpenCV для определения углов поворота головы
- Требует больше вычислительных ресурсов
- Менее точное определение углов

6.2. MediaPipe Face Mesh [6]
- GitHub: https://github.com/google/mediapipe
- Предоставляет более детальную информацию о лице
- Требует больше памяти
- Сложнее в интеграции

7. Нюансы реализации
7.1. Технические особенности
- Использование ML Kit Face Detection в режиме высокой точности (PERFORMANCE_MODE_ACCURATE) для более стабильного определения углов [2]
- Реализация расчета частоты изменения углов с учетом всех трех осей вращения
- Оптимизация производительности за счет использования STRATEGY_KEEP_ONLY_LATEST в ImageAnalysis [3]

7.2. Ограничения и их решения
- Задержка при определении углов: решено путем оптимизации размера обрабатываемого изображения
- Неточности при быстром движении: компенсированы сглаживанием значений углов
- Проблемы с освещением: решены путем настройки параметров детектора лиц

7.3. Особенности пользовательского интерфейса
- Полупрозрачный фон для текста обеспечивает читаемость при любом фоне
- Отображение углов с округлением до целых чисел для лучшей читаемости
- Автоматическое обновление частоты изменения углов

8. Заключение
В ходе работы было разработано Android-приложение, способное определять и отображать углы Эйлера положения головы человека в реальном времени. Приложение успешно решает поставленные задачи и демонстрирует возможности использования ML Kit для распознавания лиц и определения углов поворота головы [2]. Реализованное решение превосходит аналоги по простоте использования и эффективности работы [5, 6].

9. Список использованных источников
[1] Android Developers Documentation. URL: https://developer.android.com/docs
[2] ML Kit Documentation. URL: https://developers.google.com/ml-kit
[3] CameraX Documentation. URL: https://developer.android.com/training/camerax
[4] Kotlin Documentation. URL: https://kotlinlang.org/docs/home.html
[5] OpenCV Face Detection. URL: https://github.com/opencv/opencv_contrib/tree/master/modules/face
[6] MediaPipe Face Mesh. URL: https://github.com/google/mediapipe 